#!/bin/bash

usage() {
    echo "Usage: GLOBUS_CLIENT_SECRET='<secret>' `basename $0` [OPTIONS] '<gcs_image>' '<client_id>' '<deployment_key>'"
    echo
    echo "Options:"
    echo "  --incoming-port-range LOW_PORT HIGH_PORT"
    echo "                                 Allowed port range for incoming TCP data"
    echo "                                 connections  [default: 50000, 51000]"
    echo "  --outgoing-port-range LOW_PORT HIGH_PORT"
    echo "                                 Port range used as the source for outgoing"
    echo "                                 TCP data connections"
    echo "  -i, --ip-address TEXT          IP address of the GCS Node. Use this option"
    echo "                                 multiple times to set multiple IPs"
    echo "  --data-interface TEXT          IP interface of the GCS Node used for Globus"
    echo "                                 data transfers"
    echo "  -v, --verbose                  Show addition output during node setup"
    echo "  -h, --help                     Show this message and exit."
}

#
# Usage: <cnt> <value1> <value2> ...
# cnt - Number of option values to expect
# valueN - remaining command line values
#
verify_option_value()
{
    option=$1
    expected_value_cnt=$2
    values=("${@:3:$(($expected_value_cnt))}")

    if [ ${#values[@]} -ne $expected_value_cnt ]
    then
        echo "Missing value for $option"
        exit 1
    fi

    for v in "${values[@]}"
    do
        if [[ ${v} == -* ]]
        then
            echo "Missing value for $option"
            exit 1
        fi
    done
}

GCS_IMAGE=
GLOBUS_CLIENT_ID=
DEPLOYMENT_KEY=
NODE_SETUP_ARGS=""

while (( "$#" ))
do
  case $1 in
    --incoming-port-range)
      verify_option_value $1 2 "${@:2}"
      NODE_SETUP_ARGS="$NODE_SETUP_ARGS ${@:1:3}"
      shift; shift; shift
      ;;
    --outgoing-port-range)
      verify_option_value $1 2 "${@:2}"
      NODE_SETUP_ARGS="$NODE_SETUP_ARGS ${@:1:3}"
      shift; shift; shift
      ;;
    -i | --ip-address)
      verify_option_value $1 1 "${@:2}"
      NODE_SETUP_ARGS="$NODE_SETUP_ARGS ${@:1:2}"
      shift; shift
      ;;
    --data-interface)
      NODE_SETUP_ARGS="$NODE_SETUP_ARGS ${@:1:2}"
      verify_option_value $1 1 "${@:2}"
      shift; shift
      ;;
    -v | --verbose)
      NODE_SETUP_ARGS="$NODE_SETUP_ARGS $1"
      shift
      ;;
    -h | --help)
      usage
      exit 1
      ;;
    -*)
      echo "Unknown option $1"
      usage
      exit 1
      ;;
    *)
      if [ -z "$GCS_IMAGE" ]
      then
          GCS_IMAGE="$1"
      elif [ -z "$GLOBUS_CLIENT_ID" ]
      then
          GLOBUS_CLIENT_ID=$1
      elif [ -z "$DEPLOYMENT_KEY" ]
      then
          DEPLOYMENT_KEY=$1
      else
          echo "Unknown argument $1"
          usage
          exit 1
      fi
      shift
      ;;
  esac
done

if [[ -z "$DEPLOYMENT_KEY" || -z "$GLOBUS_CLIENT_SECRET" ]]
then
    usage
    exit 1
fi

tmpfile=$(mktemp /tmp/docker-run-gcs.envXXXXXX)
echo "NODE_SETUP_ARGS=${NODE_SETUP_ARGS}" > $tmpfile
echo "GLOBUS_CLIENT_ID=$GLOBUS_CLIENT_ID" >> $tmpfile
echo "GLOBUS_CLIENT_SECRET=$GLOBUS_CLIENT_SECRET" >> $tmpfile
echo -n DEPLOYMENT_KEY= >> $tmpfile
cat $DEPLOYMENT_KEY >> $tmpfile

if [ -n "$GLOBUS_SDK_ENVIRONMENT" ]
then
    echo "GLOBUS_SDK_ENVIRONMENT=$GLOBUS_SDK_ENVIRONMENT" >> $tmpfile
fi

docker run \
    --rm \
    --detach \
    --network host \
    --env-file $tmpfile \
    ${GCS_IMAGE}

rm $tmpfile
