#!/bin/bash

usage() {
    echo "Usage: `basename $0` [OPTIONS]"
    echo
    echo "Options:"
    echo "  --include-unstable-repos  Install packages from Globus' unstable repos"
    echo "  --include-testing-repos   Install packages from Globus' testing repos"
    echo "  --use-distro              Linux distro to use (ie centos7)"
    echo "  -h, --help                Show this message and exit."
}

DOCKER_BUILD_OPTIONS=

while (( "$#" ))
do
  case $1 in
    --include-unstable-repos)
      DOCKER_BUILD_OPTIONS="${DOCKER_BUILD_OPTIONS} --build-arg USE_UNSTABLE_REPOS=1"
      shift
      ;;
    --include-testing-repos)
      DOCKER_BUILD_OPTIONS="${DOCKER_BUILD_OPTIONS} --build-arg USE_TESTING_REPOS=1"
      shift
      ;;
    --use-distro)
      DOCKER_BUILD_OPTIONS="${DOCKER_BUILD_OPTIONS} --file distros/Dockerfile.$2"
      shift; shift
      ;;
    -h | --help)
      usage
      exit 1
      ;;
    *)
      echo "Unknown option $1"
      usage
      exit 1
      ;;
  esac
done

# Build it
echo BUILDING WITH $DOCKER_BUILD_OPTIONS
docker build --no-cache -t globus-connect-server54:latest $DOCKER_BUILD_OPTIONS .
if [ $? -ne 0 ]
then
    >&2 echo "docker build failed. Exitting."
    exit 1
fi

#
# Build the tag of the form "<gcs_version>-deploy-v<repo_version".
# Ex. 5.4.16-1-deploy-1.1.0 is GCSv5.4.16-1 and the image was created
# with deploy repo release version 1.1.0.
#

# Find the package version
gcs_version=`docker run --rm --entrypoint="globus-connect-server" globus-connect-server54:latest --version | awk -F, '{print $2}' | awk '{print $2}'`

# Find the version of this repo
repo_version=`head -1 Changelog | awk -F: '{print $1}'`

echo "Tagging the new image for GCS $gcs_version and deploy $repo_version"
TAG="$gcs_version-deploy-$repo_version"

# Tag the image with the package version
docker tag globus-connect-server54:latest globus-connect-server:${TAG}

echo "New image globus-connect-server:${TAG} available."
